const express = require('express'); // ✅ Importa o Express
const router = express.Router();
const bcrypt = require('bcrypt');
const db = require('./db.js');

router.post('/login', (req, res) => {
  const { usuario, senha } = req.body;

  db.query('SELECT * FROM usuarios WHERE nome_usuario = ?', [usuario], async (err, results) => {
    if (err) return res.status(500).send('Erro no login');
    if (results.length === 0) return res.status(401).send('❌ Usuário não encontrado');

    const usuarioDb = results[0];
    const match = await bcrypt.compare(senha, usuarioDb.senha);

    if (match) {
      res.status(200).json({ id: usuarioDb.id, nome: usuarioDb.nome_usuario });
    } else {
      res.status(401).send('❌ Senha incorreta');
    }
  });
});

/////////////////////////////////////////////////////////////////////
db.js

const mysql = require('mysql2');

const db = mysql.createConnection({
  host: '127.0.0.1',
  port: 3306,
  user: 'root',
  password: 'pablo136589.', // cuidado com senha exposta 👀
  database: 'Hackathon'
});

db.connect((err) => {
  if (err) {
    console.error('❌ Erro ao conectar ao banco de dados:', err);
  } else {
    console.log('✅ Conectado ao banco de dados MySQL');
  }
});

module.exports = db;
/////////////////////////////////////////////////////////////
cors.js

const express = require('express');
const cors = require('cors');
const app = express();

// Importa rotas (mesma pasta do server.js)
// const rotas = require('./rot.js');
const rotas = require('./rotas.js');

// Middleware
app.use(cors());
app.use(express.json());

// Usa as rotas
app.use('/api', rotas);

// Teste de conexão com o banco
const db = require('./db');
app.get('/test-db', (req, res) => {
  db.query('SELECT 1 + 1 AS resultado', (err, results) => {
    if (err) return res.status(500).send('❌ Erro no banco: ' + err.message);
    res.send('✅ Banco conectado! Resultado: ' + results[0].resultado);
  });
});

// Sobe servidor
app.listen(3000, () => console.log('Servidor rodando na porta 3000'));
